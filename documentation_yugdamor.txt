#this will download the package information..
os.system('sudo apt update')

#this will install chrom driver. if there is new version.
os.system('sudo apt install chromium-chromedriver')

#this will install selenium if there is new version of selenium
os.system('sudo pip3 install selenium')


options = webdriver.ChromeOptions()
options.add_argument('--headless')

#The sandbox environment provides a testing and staging platform without allowing the code being tested to make changes to existing code and databases.
options.add_argument('--no-sandbox')

options.add_argument('--disable-dev-shm-usage')
#Add this flag if you're seeing the error “Session deleted because of page crash from tab crash” in your logs when your tests fail
#(or a message along the lines of a page crash), or Chrome is unreachable.

#Chrome command line switches to exclude that ChromeDriver by default passes when starting Chrome.
#i added this so that website can not identify that we are using some automation tool
options.add_experimental_option("excludeSwitches", ["enable-automation"])
options.add_experimental_option('useAutomationExtension', False)
options.add_argument("--disable-blink-features=AutomationControlled")
# all three line is to just avoid detection of our scraper

#this is custom user agent.
options.add_argument("user-agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36")

driver =webdriver.Chrome('chromedriver',options=options)
